{"version":3,"sources":["components/LinkRow.js","components/Header.js","components/SearchBar.js","components/Result.js","components/ResultRow.js","components/Memento_poster.jpg","components/SearchArea.js","components/CategoryList.js","components/Text.js","components/Movie.js","components/MovieRow.js","components/MovieTable.js","components/PlanMovieTable.js","components/StatBox.js","components/Stats.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["LinkRow","curScreen","onChange","ButtonGroup","color","aria-label","Button","onClick","Header","className","SearchBar","onSearch","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","id","label","variant","Result","result","onAdd","src","Poster","alt","Title","Year","imdbID","ResultRow","inResults","map","index","SearchArea","length","CategoryList","onSort","useState","border","setBorder","sort","category","style","cursor","textDecoration","Text","inText","useStyles","makeStyles","theme","root","margin","spacing","Movie","inMovie","onDelete","classes","genres","Genre","split","directors","Director","actors","Actors","dir","genre","actor","Metascore","IconButton","size","MovieRow","inMovies","movie","MovieTable","PlanMovieTable","StatBox","mostElement","inPlanMovies","movieList","element","seen","i","push","arr","mode","numMapping","greatestFreq","forEach","number","Stats","Main","inScreen","movies","setMovies","planMovies","setPlanMovies","results","setResults","searchText","setSearchText","useEffect","a","fetchMovies2","moviesFromServer","planMoviesFromServer","getMovies","fetchMovies","screen","fetch","res","json","data","search","then","response","Search","posterFix","getMovieInfo","movieID","method","headers","body","JSON","stringify","filter","deleteMovie","sortMovies","tempMovies","b","nameA","toUpperCase","nameB","target","value","App","setScreen","change","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d2eb0dc.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\n\r\nconst LinkRow = ({ curScreen, onChange }) => {\r\n    return (\r\n        <ButtonGroup color=\"primary\" aria-label=\"button group\">\r\n            { curScreen === \"list\" ?\r\n                <Button onClick={() => onChange(\"plan\")}>Plan to Watch</Button> :\r\n                <Button onClick={() => onChange(\"list\")}>Movie List</Button>\r\n            }\r\n            \r\n            {/* <Button onClick={() => onChange(\"stat\")}>Stats</Button> */}\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\nexport default LinkRow\r\n","import LinkRow from './LinkRow'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Header = ({ curScreen, onChange }) => {\r\n    return (\r\n        <div className=\"Header\">\r\n            { curScreen === \"list\" ?\r\n                <h1 className=\"Banner\">\r\n                    Movie List\r\n                </h1> :\r\n                <h1 className=\"Banner\">\r\n                    Plan To Watch\r\n                </h1>\r\n            }\r\n            \r\n            <LinkRow curScreen={curScreen} onChange={onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SearchBar = ({ onSearch, onChange }) => {\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        onSearch()\r\n    }\r\n\r\n    return (\r\n        <div className=\"SearchBar\">\r\n            <form noValidate autoComplete=\"off\" onSubmit={onSubmit} className=\"SearchBarItem\">\r\n                <TextField id=\"filled-basic\" label=\"Search for a Movie\" variant=\"filled\" onChange={onChange} />\r\n            </form>\r\n            <Button onClick={onSearch} color=\"primary\" variant=\"contained\">Search</Button>\r\n        </div>\r\n\r\n        // <div className=\"SearchBar\">\r\n        //     <input type='text' placeholder='Movie Title'></input>\r\n        //     <input type='submit' value='Search'></input>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import Button from '@material-ui/core/Button';\r\n\r\nconst Result = ({ result, onAdd }) => {\r\n    return (\r\n        <div className=\"Result\">\r\n            <img src={result.Poster} alt=\"Result poster\"></img>\r\n            <h4>{result.Title}</h4>\r\n            <h4>{result.Year}</h4>\r\n            <Button onClick={() => onAdd(result.imdbID)} color=\"primary\" variant=\"contained\">Add</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import Result from './Result'\r\nimport moviePoster from './Memento_poster.jpg'\r\n\r\nconst ResultRow = ( { inResults, onAdd } ) => {\r\n    \r\n\r\n    return (\r\n    <div className='ResultRow'>\r\n        {inResults.map((result, index) => (\r\n            <Result key={index} result={result} onAdd={onAdd}/>)\r\n        )}\r\n    </div>\r\n    )\r\n    \r\n\r\n\r\n}\r\n\r\nexport default ResultRow\r\n","export default __webpack_public_path__ + \"static/media/Memento_poster.477caece.jpg\";","import SearchBar from './SearchBar'\r\nimport ResultRow from './ResultRow'\r\n\r\nconst SearchArea = ( { onSearch, inResults, onChange, onAdd }) => {\r\n    return (\r\n        <div className=\"SearchArea\">\r\n            <SearchBar onSearch={onSearch} onChange={onChange}/>\r\n            {inResults.length > 0 ? \r\n                (<ResultRow inResults={inResults} onAdd={onAdd}/>) :\r\n                (<h3>No Results</h3>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchArea\r\n","import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport { useState } from 'react'\r\n\r\nconst CategoryList = ({ onSort }) => {\r\n    const [border, setBorder] = useState([\"none\", \"none\", \"none\", \"none\"])\r\n\r\n    const sort = (category) => {\r\n        if (category === 'Title') {\r\n            setBorder([\"1px solid white\", \"none\", \"none\", \"none\"])\r\n        }\r\n        else if (category === 'Year') {\r\n            setBorder([\"none\", \"1px solid white\", \"none\", \"none\"])\r\n        }\r\n        else if (category === 'Director') {\r\n            setBorder([\"none\", \"none\", \"1px solid white\", \"none\"])\r\n        }\r\n        else {\r\n            setBorder([\"none\", \"none\", \"none\", \"1px solid white\"])\r\n        }\r\n        onSort(category)\r\n    }\r\n\r\n    return (\r\n        <div className=\"CategoryList\">\r\n            <h3>Poster</h3>\r\n            <h3 style={{border: border[0], cursor: \"pointer\", textDecoration: \"underline\"}} onClick={() => sort('Title')}>Title</h3>\r\n            <h3 style={{border: border[1], cursor: \"pointer\", textDecoration: \"underline\"}} onClick={() => sort('Year')}>Year</h3>\r\n            <h3 style={{border: border[2], cursor: \"pointer\", textDecoration: \"underline\"}} onClick={() => sort('Director')}>Director</h3>\r\n            <h3>Genre</h3>\r\n            <h3>Actors</h3>\r\n            <h3 style={{border: border[3], cursor: \"pointer\", textDecoration: \"underline\"}} onClick={() => sort('Metascore')}>Metascore</h3>\r\n            {/* <h3>Language</h3> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryList\r\n","const Text = ({ inText }) => {\r\n    return (\r\n        <h4>{inText}</h4>\r\n    )\r\n}\r\n\r\nexport default Text\r\n","import Text from './Text'\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(5),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Movie = ( { inMovie, onDelete }) => {\r\n    const classes = useStyles();\r\n\r\n    const genres = inMovie.Genre.split(\",\")\r\n    const directors = inMovie.Director.split(\",\")\r\n    const actors = inMovie.Actors.split(\",\")\r\n    // const langs = inMovie.Language.split(\",\")\r\n    return (\r\n        <div className=\"Movie\">\r\n            <img src={inMovie.Poster} alt=\"Movie Poster\"></img>\r\n            <h4>{inMovie.Title}</h4>\r\n            <h4>{inMovie.Year}</h4>\r\n            <div className=\"DataList\">\r\n                {directors.map((dir, index) => (\r\n                    <Text key={index} inText={dir}/>)\r\n                )}\r\n            </div>\r\n            <div className=\"DataList\">\r\n                {genres.map((genre, index) => (\r\n                    <Text key={index} inText={genre}/>)\r\n                )}\r\n            </div>\r\n            <div className=\"DataList\">\r\n                {actors.map((actor, index) => (\r\n                    <Text key={index} inText={actor}/>)\r\n                )}\r\n            </div>\r\n            {/* <div className=\"DataList\">\r\n                {langs.map((lang, index) => (\r\n                    <Text key={index} inText={lang}/>)\r\n                )}\r\n            </div> */}\r\n            <h4>{inMovie.Metascore}</h4>\r\n            <IconButton  className={classes.root} color=\"default\" onClick={() => onDelete(inMovie.imdbID)} aria-label=\"delete\">\r\n                <DeleteIcon size=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import Movie from './Movie'\r\n\r\n\r\nconst MovieRow = ({ inMovies, onDelete }) => {\r\n    return (\r\n        <div>\r\n            {inMovies.map((movie, index) => (\r\n                <Movie key={movie.imdbID} inMovie={movie} onDelete={onDelete}/>)\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieRow\r\n","import CategoryList from './CategoryList'\r\nimport MovieRow from './MovieRow'\r\n\r\n\r\nconst MovieTable = ({ inMovies, onDelete, onSort }) => {\r\n    // useEffect( () => {}, [inMovies])\r\n\r\n    return (\r\n        <div className=\"MovieTable\">\r\n            <CategoryList onSort={onSort} />\r\n            <MovieRow inMovies={inMovies} onDelete={onDelete}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieTable\r\n","import CategoryList from './CategoryList'\r\nimport MovieRow from './MovieRow'\r\n\r\nconst PlanMovieTable = ({ inMovies, onDelete, onSort }) => {\r\n    return (\r\n        <div className=\"MovieTable\">\r\n            <CategoryList onSort={onSort} />\r\n            <MovieRow inMovies={inMovies} onDelete={onDelete}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanMovieTable\r\n","const StatBox = ({ inMovies, inPlanMovies }) => {\r\n    const indexOfMax = (arr) => {\r\n        if (arr.length === 0) {\r\n            return -1;\r\n        }\r\n    \r\n        var max = arr[0];\r\n        var maxIndex = 0;\r\n    \r\n        for (var i = 1; i < arr.length; i++) {\r\n            if (arr[i] > max) {\r\n                maxIndex = i;\r\n                max = arr[i];\r\n            }\r\n        }\r\n    \r\n        return maxIndex;\r\n    }\r\n\r\n    const mode = (arr) => {\r\n        var numMapping = {};\r\n        var greatestFreq = 0;\r\n        var mode;\r\n        arr.forEach(function findMode(number) {\r\n            numMapping[number] = (numMapping[number] || 0) + 1;\r\n    \r\n            if (greatestFreq < numMapping[number]) {\r\n                greatestFreq = numMapping[number];\r\n                mode = number;\r\n            }\r\n        });\r\n        return +mode;\r\n    }\r\n\r\n    const mostElement = (movieList, element) => {\r\n        let seen = []\r\n        for (var i = 0; i < movieList.length; i++) {\r\n            seen.push(movieList[i][element])\r\n        }\r\n        return mode(seen)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{mostElement(inMovies, \"Year\")}</h3>\r\n            <h3>{mostElement(inMovies, \"Director\")}</h3>\r\n            <h3>{mostElement(inMovies, \"Rated\")}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatBox\r\n","import StatBox from './StatBox'\r\n\r\nconst Stats = ({ inMovies, inPlanMovies }) => {\r\n    return (\r\n        <div>\r\n            <StatBox inMovies={inMovies} inPlanMovies={inPlanMovies}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","import SearchArea from './SearchArea'\r\nimport MovieTable from './MovieTable'\r\nimport PlanMovieTable from './PlanMovieTable'\r\nimport { useState, useEffect } from 'react'\r\nimport Stats from './Stats'\r\n\r\n\r\nconst Main = ({ inScreen }) => {\r\n    const [movies, setMovies] = useState([])\r\n    const [planMovies, setPlanMovies] = useState([])\r\n\r\n    const [results, setResults] = useState([])\r\n    const [searchText, setSearchText] = useState(\"\")\r\n\r\n    const textFieldChange = (e) => {\r\n      setSearchText(e.target.value)\r\n    }\r\n\r\n    // Fetch movies from server on page load\r\n    useEffect(() => {\r\n      const getMovies = async () => {\r\n        const moviesFromServer = await fetchMovies2(\"list\")\r\n        setMovies(moviesFromServer)\r\n        const planMoviesFromServer = await fetchMovies2(\"plan\")\r\n        setPlanMovies(planMoviesFromServer)\r\n      }\r\n      getMovies()\r\n    }, [])\r\n\r\n    // Fetch movies\r\n    const fetchMovies = async (screen) => {\r\n      const res = await fetch(`http://localhost:5000/${screen}Movies`)\r\n      const data = await res.json()\r\n      //console.log(data)\r\n  \r\n      return data\r\n    }\r\n\r\n    // Fetch movies\r\n    const fetchMovies2 = async (screen) => {\r\n      const res = await fetch(`https://my-json-server.typicode.com/vbass0903/json-server/${screen}Movies`)\r\n      const data = await res.json()\r\n      //console.log(data)\r\n  \r\n      return data\r\n    }\r\n\r\n    const search = async () => {\r\n      if (searchText.length > 0) {\r\n        await fetch(\"https://movie-database-imdb-alternative.p.rapidapi.com/?s=\" + searchText + \"&page=1&type=movie&r=json\", {\r\n          \"method\": \"GET\",\r\n          \"headers\": {\r\n            \"x-rapidapi-key\": \"e786be2e11msh733b0cf04d5f561p1b8ce3jsn82282c3ec453\",\r\n            \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\r\n          }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          data.Search.forEach(result => posterFix(result))\r\n          setResults(data.Search)\r\n        })\r\n      }\r\n      else {\r\n        setResults([])\r\n      }\r\n    }\r\n\r\n    const posterFix = (result) => {\r\n      if (result.Poster === \"N/A\") {\r\n        result.Poster = 'https://davidkoepp.com/wp-content/themes/blankslate/images/Movie%20Placeholder.jpg'\r\n      }\r\n    }\r\n\r\n    const getMovieInfo = async (movieID) => {\r\n      await fetch(\"https://movie-database-imdb-alternative.p.rapidapi.com/?i=\" + movieID + \"&r=json\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"e786be2e11msh733b0cf04d5f561p1b8ce3jsn82282c3ec453\",\r\n          \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\r\n        }\r\n      })\r\n      .then((response) => response.json())\r\n      .then(async (data)  => {\r\n        posterFix(data)\r\n        await fetch(`https://my-json-server.typicode.com/vbass0903/json-server/${inScreen}Movies`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify(data)\r\n        })\r\n        if (inScreen === \"list\") {\r\n          setMovies([...movies, data])\r\n        }\r\n        else {\r\n          setPlanMovies([...planMovies, data])\r\n        }\r\n        \r\n      })\r\n      setResults(results.filter((movie) => movie.imdbID !== movieID))\r\n    }\r\n\r\n    const deleteMovie = async (movieID) => {\r\n      await fetch(`https://my-json-server.typicode.com/vbass0903/json-server/${inScreen}Movies/${movieID}`, {\r\n        method: 'DELETE'\r\n        })\r\n        if (inScreen === \"list\") {\r\n          setMovies(movies.filter((movie) => movie.imdbID !== movieID))\r\n        }\r\n        else {\r\n          setPlanMovies(planMovies.filter((movie) => movie.imdbID !== movieID))\r\n        }\r\n        \r\n    }\r\n\r\n    const sortMovies = async (category) => {\r\n      const tempMovies = await fetchMovies(inScreen)\r\n      if (category === 'Title' || category === 'Director') {\r\n        setMovies(tempMovies.sort(function(a, b) {\r\n          var nameA = a[category].toUpperCase(); // ignore upper and lowercase\r\n          var nameB = b[category].toUpperCase(); // ignore upper and lowercase\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n        \r\n          // names must be equal\r\n          return 0;\r\n        }))\r\n      }\r\n      else if (category === 'Year') {\r\n        setMovies(tempMovies.sort(function (a, b) {\r\n          return a.Year - b.Year;\r\n        }))\r\n      }\r\n      else if (category === 'Metascore') {\r\n        setMovies(tempMovies.sort(function (a, b) {\r\n          return b.Metascore - a.Metascore;\r\n        }))\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            <SearchArea inResults={results} onChange={textFieldChange} onAdd={getMovieInfo} onSearch={search} />\r\n            { inScreen === \"list\" ?\r\n              <MovieTable inMovies={movies} onDelete={deleteMovie} onSort={sortMovies}/> : \r\n              inScreen === \"plan\" ?\r\n              <PlanMovieTable inMovies={planMovies} onDelete={deleteMovie} onSort={sortMovies}/> :\r\n              <Stats inMovies={movies} inPlanMovies={planMovies}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import './App.css';\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport { useState, useEffect } from 'react'\n// import '@fontsource/roboto';\n\nfunction App() {\n  const [screen, setScreen] = useState(\"list\")\n\n  const changeScreen = (change) => {\n    setScreen(change)\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header curScreen={screen} onChange={changeScreen}/>\n      <Main inScreen={screen}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}